{"./":{"url":"./","title":"目次","keywords":"","body":"adstir Integration Guide for Android adstirのインテグレーションガイドです。Android Studioに対応しています Introduction 初期設定 Google Play Serviceのセットアップ プロジェクトへSDKの導入 ProGuardの設定 提携対応ネットワーク AdColony AdCorsa 変更履歴 "},"初期設定/初期設定.html":{"url":"初期設定/初期設定.html","title":"初期設定","keywords":"","body":"以下の手順で初期設定を行います。 Google Play Serviceのセットアップ プロジェクトへSDKの導入 ProGuardの設定 Google Play serviceのセットアップ 本SDKでは、Google Play servicesの機能を使用しているため、セットアップが必要です。 Toolsメニューから、Android -> SDK Managerとクリックします。 SDK Toolsタブを選択し、Support Repositoryの項目を展開し、Google Repositoryを選択された状態にし、OKをクリックし、ライブラリのリポジトリを更新します。 アプリケーションのモジュールディレクトリにあるbuild.gradleを開きます。 build.gradleファイルはモジュール毎に存在しますが、ここではアプリケーションレベルのファイルを選択します。 dependenciesセクションに、Google Play sevicesへの依存情報を追記します。 以下は例となり、他の依存情報がある場合は、下記のcomipleから始まる行を追記してください。 また、com.android.support配下のライブラリのバージョンはプロジェクト内で同一バージョンを指定する必要がありますのでご注意ください。 apply plugin: 'com.android.application' ... repositories { jcenter() } dependencies { implementation 'com.google.android.gms:play-services-ads:x.x.x' } MoPubをご利用の場合、'play-services-ads:11.2.x'では再生できない場合がありますので、別のバージョンをご利用ください。 プロジェクトへSDKの導入 adstir SDK 2.14.6以上をご利用する場合はAndroidXへの移行が必要です。こちらを参考にAndroidXへ移行をお願いいたします。 [[build.gradleへ記述してSDKを追加|初期設定(Android Studio)#buildgradleへ記述してsdkを追加]]もしくは[[手動でSDKを追加|初期設定(Android Studio)#手動でsdkを追加]]からプロジェクトへSDKを追加してください。 build.gradleへ記述してSDKを追加 アプリケーションのモジュールディレクトリにあるbuild.gradleを開き、repositoriesセクションを追加し、dependenciesセクションへ以下のように追記します。バージョンは[[変更履歴|変更履歴]]よりご選択ください。 apply plugin: 'com.android.application' ... repositories { jcenter() maven { url 'http://cdnp.ad-stir.com/m2' } } dependencies { implementation 'com.google.android.gms:play-services-ads-lite:x.x.x' // 利用するadstirのSDKバージョンを設定します def adstir_version = \"x.x.x\" implementation \"com.ad-stir.webviewsdk:adstir-webviewsdk:${adstir_version}\" } 次は[[ProGuardの設定|初期設定(Android Studio)#proguardの設定]]を行なってください。 手動でSDKを追加 SDKの準備 管理画面にログインして、対象の枠の「タグ/SDK」を選択してください。 「SDKダウンロード」より「Adstir SDK(Android/AAR形式)」をダウンロードしてください。 「SDKパラメータ」より「メディアID」および「枠No」を取得してください。 SDKの追加 SDKの準備#sdk%E3%81%AE%E6%BA%96%E5%82%99)でダウンロードした圧縮ファイルを展開してください。 展開したフォルダの中にある .aarファイルを「File -> New -> New Module -> Import JAR / AAR Package」よりインポートしてください。 「File -> Project Structure -> app -> Dependencies」に、2.でインポートしたモジュールを追加してください。 ProGuardの設定 ProGuardを使用しているアプリにはproguard-rules.proに、下記の内容を追加してください。この記述が無い場合、addtirの機能を正常に利用することができません。また、動画視聴型広告を導入される場合は、動画視聴型広告使用時のProguard設定をご覧ください。 -keep class com.google.android.gms.ads-lite.** {*;} -keep class com.ad_stir.** {*;} -keepattributes EnclosingMethod "},"partner_nw/partner_nw.html":{"url":"partner_nw/partner_nw.html","title":"提携対応ネットワーク","keywords":"","body":"対応提携ネットワークについて 各広告には下記のネットワークが対応しています。 ネットワーク 最低動作OSversion 容量(KB)* バナー スワイプインタースティシャル ネイティブ 動画リワード 全画面インタースティシャル AdColony 4.4〜 - - - ○ - AdCorsa 4.4〜 170 - - - ○ ○ AppLovin 4.4〜 190 - - - ○ ○ UnityAds 4.4〜 100 - - - ○ - Maio 4.4〜 40 - - - ○ ○ Vungle(~2.12.0) 4.4〜 540 - - - ○ ○ TapJoy 4.4〜 280 - - - ○ ○ CAReward(~2.12.0) 4.4〜 170 - - - ○ - MoPub 4.4〜 1160 ○ ○ ○ ○ ○ Nend 4.4〜 380 - - - ○ ○ Mobvista 4.4〜 380 - - - ○ ○ imobile 4.4〜 40 - - - - ○ Zucks 4.\b4〜 40 - ○ - - - AmazonAds 4.4〜 150 ○ - - - - Appnext 4.4〜 170 ○ - - - - * 容量は、対応提携ネットワークのSDKと、メディエーションアダプタを追加したときに増加する概算容量です。 * Android versionに記載されているバージョン未満の端末の場合、別のネットワークが選択されます。 各広告ネットワークの導入 以下のリンクから、導入を行なってください。動画リワード/全画面インタースティシャルをご利用される場合は、[[こちら|対応提携NW#動画広告をまとめて導入する]]の設定を行うことで、動画リワード/全画面インタースティシャルで利用する広告ネットワークが導入されます。 AdColony AdCorsa 動画広告をまとめて導入する app/build.gradle に以下のように記述することで動画リワード/全画面インタースティシャルで利用できる以下のネットワークがプロジェクトに組み込まれます。バージョンは[[変更履歴|変更履歴]]よりご選択ください。 AdColony (2.13.1〜) AdCorsa AppLovin UnityAds Maio TapJoy MoPub Nend Mobvista imobile repositories { maven { url 'http://cdnp.ad-stir.com/m2' } jcenter() } dependencies { ... // 利用するadstirのSDKバージョンを設定します def adstir_version = \"x.x.x\" implementation \"com.ad-stir.webviewsdk:adstir-webviewsdk:${adstir_version}\" // 全ての動画リワード広告と全画面インタースティシャル広告の提携ネットワークが導入されます implementation \"com.ad-stir.mediationadapter:adstir-mediationadapter:${adstir_version}\" implementation 'com.google.android.gms:play-services-ads:+' implementation 'com.google.android.gms:play-services-base:+' // ご利用されているライブラリが競合した際は下記のバージョンをご利用されているライブラリのバージョンへ書き換えてください。 configurations.all { resolutionStrategy.force \"androidx.legacy:legacy-support-v4:x.x.x\" resolutionStrategy.force \"androidx.annotation:annotation:x.x.x\" resolutionStrategy.force \"androidx.recyclerview:recyclerview:x.x.x\" resolutionStrategy.force \"androidx.appcompat:appcompat:x.x.x\" resolutionStrategy.force \"androidx.constraintlayout:constraintlayout:x.x.x\" } } MoPubをご利用される場合はapp/build.gradleに下記のものも追記してください。 android { ... compileOptions { sourceCompatibility JavaVersion.VERSION_1_8 targetCompatibility JavaVersion.VERSION_1_8 } } "},"partner_nw/adcolony.html":{"url":"partner_nw/adcolony.html","title":"AdColony","keywords":"","body":"対応OS AdColonyはAndroid 4.4以上の端末に配信されます。 AdCorsa対応SDKの準備 バンドル版の入手は、担当またはお問い合わせフォームよりご連絡ください。 プロジェクトへSDKの追加 初期設定でbuild.gradleへ記述してSDKを追加した場合は1.で、手動でSDKを追加した場合は2.でプロジェクトへSDKを追加します。 1. build.gradleへ記述してSDKを追加した場合 アプリケーションのモジュールディレクトリにあるbuild.gradleを開き、repositoriesセクションを追加し、dependenciesセクションへ以下のように追記します。バージョンは変更履歴よりご選択ください。 apply plugin: 'com.android.application' ... repositories { jcenter() maven { url 'http://cdnp.ad-stir.com/m2' } } dependencies { compile 'com.google.android.gms:play-services-ads:x.x.x' // 利用するadstirのSDKバージョンを設定します def adstir_version = \"x.x.x\" compile \"com.ad-stir.webviewsdk:adstir-webviewsdk:${adstir_version}\" compile \"com.ad-stir.mediationadapter:adstir-mediationadapter-adcolony:${adstir_version}\" } 2. 手動でSDKを追加した場合 File -> New -> New Module -> Import .JAR/.AAR Package よりadcolony-x.x.x.aar,androidwebviewmediation-adapter-adcolony.aarを追加します。 File -> Project Structure -> app -> Dependencies よりadcolony-x.x.x,androidwebviewmediation-adapter-adcolonyを追加します。 ProGuardの設定 ProGuardを使用しているアプリにはproguard-rules.proに、下記の内容を追加してください。この記述が無い場合、adstirの機能を正常に利用することができません。 -keepclassmembers class * { @android.webkit.JavascriptInterface ; } # Keep ADCNative class members unobfuscated -keepclassmembers class com.adcolony.sdk.ADCNative** { *; } "},"partner_nw/adcorsa.html":{"url":"partner_nw/adcorsa.html","title":"AdCorsa","keywords":"","body":"対応OS AdCorsaはadstir SDK 2.12.0以降をお使いの場合はAndroid 4.4以上の端末に配信されます。 AdCorsa対応SDKの準備 バンドル版の入手は、担当またはお問い合わせフォームよりご連絡ください。 プロジェクトへSDKの追加 初期設定でbuild.gradleへ記述してSDKを追加した場合は1.で、手動でSDKを追加した場合は2.でプロジェクトへSDKを追加します。 build.gradleへ記述してSDKを追加した場合 アプリケーションのモジュールディレクトリにあるbuild.gradleを開き、repositoriesセクションを追加し、dependenciesセクションへ以下のように追記します。バージョンは[[変更履歴|変更履歴]]よりご選択ください。 apply plugin: 'com.android.application' ... repositories { jcenter() maven { url 'http://cdnp.ad-stir.com/m2' } } dependencies { implementation 'com.google.android.gms:play-services-ads:x.x.x' // 利用するadstirのSDKバージョンを設定します def adstir_version = \"x.x.x\" implementation \"com.ad-stir.webviewsdk:adstir-webviewsdk:${adstir_version}\" implementation \"com.ad-stir.mediationadapter:adstir-mediationadapter-adcorsa:${adstir_version}\" } 手動でSDKを追加した場合 adstir SDK 2.14.3のzipパッケージにAdCorsaのSDKが含まれておりませんでした。2.14.3r2のzipパッケージをご利用ください File -> New -> New Module -> Import .JAR/.AAR Package よりglossom-ads-android.jar,androidwebviewmediation-adapter-adcorsa.aarを追加します。 File -> Project Structure -> app -> Dependencies よりglossom-ads-android,androidwebviewmediation-adapter-adcorsaを追加します。 ProGuardの設定 ProGuardを使用しているアプリにはproguard-rules.proに、下記の内容を追加してください。この記述が無い場合、adstirの機能を正常に利用することができません。 -keep interface com.glossomads.** -keep class com.glossomads.** { *; } -dontwarn com.glossomads.** "},"banner/banner.html":{"url":"banner/banner.html","title":"バナー広告","keywords":"","body":"バナー広告の実装 対応OS Android 4.4 以上 広告の設置 以下のどちらかの方法で広告を設置してください。 XMLにて設置 adsizeは管理画面で登録した枠サイズと同じものを設定してください。 Javaコードにて設置 com.ad_stir.webview.AdstirMraidView view = new com.ad_stir.webview.AdstirMraidView( activity, \"メディアID\", 枠No, com.ad_stir.webview.AdstirMraidView.AdSize.Size320x50, 広告リフレッシュ秒[整数]); layout.addView(view); 第4引数は管理画面で登録した枠サイズと同じものを設定してください。 ライブラリ詳細 [[APIリファレンス|AdStirAds-API-Reference#バナー広告]]をご覧ください。 "},"video_reward/video_reward.html":{"url":"video_reward/video_reward.html","title":"動画リワード","keywords":"","body":"動画リワード広告の実装方法です。 AndroidXへの移行が必要です。こちらを参考にAndroidXへ移行をお願いいたします。 SDKを更新する際はパッケージに含まれる全てのSDKを更新してください。バージョンの異なるSDKをご利用の場合、正常に動作しない可能性があります。 対応OS Android4.1以上(Andoid4.4以上推奨) 利用準備 プロジェクトの設定 Compile SDK Version は API18以上に設定してください。 ProGuardの設定 ProGuardを使用しているアプリには[[導入した対応提携ネットワーク|対応提携NW#各広告ネットワークの導入]]の各ProGuardもしくは、動画視聴型広告使用時のProguard設定の追加をお願いいたします。 広告の設定 メディアユーザIDの設定を行う 動画広告の初期化を行う 動画リワード広告のインスタンスを生成 リスナーの生成 動画リワード広告の読み込み 動画リワード広告の再生 メディアユーザIDの設定を行う サーバーサイドで成果通知を受け取る場合、メディアユーザーIDを設定します。メディアユーザIDの設定は、動画リワード広告の読み込みよりも前までに設定する必要があります。 // サーバーサイドで成果通知を受け取る場合、メディアユーザーIDを設定します。 // ここでは例として、メールアドレスを指定していますが、任意のID(半角英数記号)が利用可能です。 AdstirVideoAds.setMediaUserID(\"xxx@xxx.xx\"); 動画広告の初期化を行う はじめに、AdstirVideoAds.init()を使い、プロジェクトで利用する全ての動画広告の初期化を同時に行います。動画リワードと[[全画面インタースティシャル|Androidアプリへの全画面インタースティシャル広告の導入（Android Studio）]]を併用する場合は、同時に初期化を行う必要があります。 // 使用する動画リワードと全画面インタースティシャルの全てのスポットIDについて、初期化処理を行います。 int[] spotIds = { 1, 2 }; AdstirVideoAds.init(this, \"MEDIA-xxxxxx\", spotIds); 動画リワード広告のインスタンスを生成 AdstirVideoRewardのインスタンスを生成します。 // スポットIDごとにインスタンスを生成します。ここでは1についてのみ生成します。 AdstirVideoReward adstirVideoReward = new AdstirVideoReward(this, \"MEDIA-xxxxxx\", 1); リスナーの生成 動画リワード広告のイベント通知を行うリスナーのインスタンスを生成します。 // リスナーの定義 AdstirVideoRewardListener listener = new AdstirVideoRewardListener() { // 広告の読み込みが完了した際に再生を開始します。 public void onLoad(int spot_no) { // 動画の読み込みが完了した時の処理を書きます } public void onFailed(int spot_no) { // 動画の読み込みが失敗した時の処理を書きます } public void onStart(int spot_no) { // 動画の再生が開始した時の処理を書きます } public void onStartFailed(int spot_no) { // 動画の再生が失敗した時の処理を書きます } public void onFinished(int spot_no) { // 動画の再生が終了した時の処理を書きます } public void onReward(int spot_no) { // リワードが発生した時の処理を書きます } public void onRewardCanceled(int spot_no) { // リワードの発生が失敗した時の処理を書きます } public void onClose(int spot_no) { // 動画がとじらられた時の処理を書きます } }; // 上で定義したリスナーを登録します。 adstirVideoReward.setAdstirVideoRewardListener(listener); 動画リワード広告の読み込み 動画リワード広告の読み込みを行います。 // 動画リワード広告を読み込みます。 adstirVideoReward.load(); 動画リワード広告の再生 読み込みが完了した動画リワード広告を再生します。動画の再生後、もう一度動画を再生するためには5.動画リワード広告の読み込みを行う必要があります。 // 再生可能状態を確認してから再生します。 if(adstirVideoReward.canShow()){ adstirVideoReward.showRewardVideo(); } 動画リワード広告の実装例 動画リワード広告の実装例になります。 // 下記のインポートが必要です import com.ad_stir.interstitial.AdstirVideoAds; import com.ad_stir.videoreward.AdstirVideoReward; import com.ad_stir.videoreward.AdstirVideoRewardListener; private static final String TAG = \"Adstir\"; private boolean isRewarded = false; private AdstirVideoReward adstirVideoReward; // リスナーの定義 private AdstirVideoRewardListener listener = new AdstirVideoRewardListener() { // 広告の読み込みが完了した際に再生を開始します。 public void onLoad(int spot_no) { // ロードが完了した時の処理を記述できます。 // この例ではロードが完了した時に再生ボタンを有効にします。 showButton.setEnabled(true); } public void onFailed(int spot_no) { // スタートが失敗した時の処理を記述できます。 } public void onStart(int spot_no) { // 動画が再生された時の処理を記述できます。 } public void onStartFailed(int spot_no) { // 動画の再生が失敗した時の処理を記述できます。 } public void onFinished(int spot_no) { // 動画の再生が終了した時の処理を記述できます。 } public void onReward(int spot_no) { // リワードが付与された時の処理を記述できます。 isRewarded = true; } public void onRewardCanceled(int spot_no) { // リワードが付与されなかった時の処理を記述できます。 } public void onClose(int spot_no) { // 動画が閉じられた時の処理を記述できます。 } }; @Override // 広告の読み込み protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.xxxx); // サーバーサイドで成果通知を受け取る場合、メディアユーザーIDを設定します。 // ここでは例として、メールアドレスを指定していますが、任意のID(半角英数記号)が利用可能です。 AdstirVideoAds.setMediaUserID(\"xxx@xxx.xx\"); // 使用する動画リワードと全画面インタースティシャルの全てのスポットIDについて、初期化処理を行います。 int[] spotIds = { 1, 2 }; AdstirVideoAds.init(this, \"MEDIA-xxxxxx\", spotIds); // スポットIDごとにインスタンスを生成します。ここでは1についてのみ生成します。 adstirVideoReward = new AdstirVideoReward(this, \"MEDIA-xxxxxx\", 1); // 上で定義したリスナーを登録します。 adstirVideoReward.setAdstirVideoRewardListener(listener); // 広告を読み込みます。 adstirVideoReward.load(); showButton = (Button) findViewById(show_button); showButton.setEnabled(false); showButton.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { // ボタンをタップした時に再生を開始します if (adstirVideoReward.canShow()) { adstirVideoReward.show(); } } }); } // 広告の一時停止等 @Override protected void onResume() { if(adstirVideoReward != null) { adstirVideoReward.resume(); } if(isRewarded) { isRewarded = false; Log.d(TAG, \"Reward success.\"); } super.onResume(); } @Override protected void onPause() { if(adstirVideoReward != null) adstirVideoReward.pause(); super.onPause(); } @Override protected void onDestroy() { if(adstirVideoReward != null) adstirVideoReward.destroy(); super.onDestroy(); } ライブラリ詳細 [[APIリファレンス|AdStirAds-API-Reference#動画視聴型インセンティブ広告]]をご覧ください。 成果のコールバックURLへの通知 AdStirでは、インセンティブ付与の通知を、任意のコールバックURLに行うことが可能です。付与するインセンティブの単位と額は、任意の値に変更可能です。AdstirVideoAds.setMediaUserID(\"xxx@xxx.xx\"); でユーザーIDを設定していない場合には通知されませんので、ご注意ください。 動画インセンティブ付与をコールバックURLに通知する "},"変更履歴/changelog.html":{"url":"変更履歴/changelog.html","title":"変更履歴","keywords":"","body":"v2.14.6 (2019/11/28) Bundle SDKの更新 AdColony (4.1.0) AppLovin (9.10.3) Mobvsita (10.1.0) MoPub (5.10.0) Nend (5.3.0) TapJoy (12.3.4) UnityAds (3.3.0) UnityAdsアダプターの安定性向上 AndroidXへ移行 こちらを参考にAndroidXへ移行をお願いいたします。 v2.14.5 (2019/11/28) 軽微な修正 v2.14.4 (2019/10/09) 下記アダプターの安定性向上 AdColony UnityAds TapJoy Mobvista imobile v2.14.3r2 (2019/10/03) zip版のパッケージ内容を修正 v2.14.3 (2019/09/17) 動画リワード広告、全画面インタースティシャル広告の安定性向上 AdMob ネイティブ広告ネットワークメディエーションアダプターの更新 UnifiedNativeAd の広告タイプへ変更 Bundle SDKの更新 AppLovin (v9.8.4) AdColony (v3.3.11) Maio (v1.1.10) MoPub (v5.8.0) TapJoy (v12.3.1) UnityAds (v3.2.0) MobVista (v10.0.0) v2.14.2 (2019/08/15) Bundle SDKのバージョン更新 Adcorsa (v2.0.0)v2.14.1 (2019/05/09) メディエーションアダプタのminSdkVersionを16に変更 Bundle SDKのバージョン更新 AdColony (v3.3.10) AppLovin (v9.4.2) Maio (v1.1.7) MoPub (v5.6.0) exoplayerが2.9.5に変更されております。 Nend (v5.1.0) UnityAds (v3.0.3) TapJoy(v12.2.1) Mobvista(v9.10.0) Maioアダプターの安定性向上 v2.14.0 (2019/03/20) ネイティブ動画へ対応 全画面インタースティシャル広告の安定性向上 v2.13.5 (2019/02/08) Bundle SDKのバージョン更新 AdCorsa (v1.9.2) AdColony (v3.3.7) AppLovin (v9.1.3) Maio (v1.1.6) MoPub (v5.4.1) exoplayerが2.8.3に変更されております。 Nend (v5.0.3) UnityAds (v3.0.0) imobile (v2.0.20) 下記アダプターの安定性向上 AdCorsa Maio Nend imobile v2.13.4 (2019/1/29) TapJoyアダプターの安定性向上 v2.13.3 (2019/1/9) Bundle SDKのバージョン更新 TapJoy (v12.2.0) v2.13.2 (2018/11/7) Mobvistaアダプターの修正 v2.13.1 (2018/11/2) Mobvistaのアダプターに不備があり、こちらのバージョンではMobvistaは非推奨です AdColony(3.3.5)との連携(動画リワード) compile SDK version 28への対応 v2.13.0 (2018/09/27) Mobvistaのアダプターに不備があり、こちらのバージョンではMobvistaは非推奨です Bundle SDKのバージョン更新 AdCorsa (v1.9) AppLovin (v8.1.0) Maio (v1.1.3) MoPub (v5.3.0) MobVista (v8.13.0) Nend (v5.0.2) Vungle、CAReward SDKのバンドルを終了 ネイティブ広告の安定性向上 動画リワード広告の安定性向上 v2.12.0 (2018/06/06) このバージョンから全ての広告はAndroid 4.4未満の端末へは配信されません Ad Exchange経由でadstirの動画リワード広告へ対応 Bundle SDKのバージョン更新 AppLovin (v8.0.1) AdCorsa (v1.7) Maio (v1.0.8) MobVista (v8.11.0) MoPub (v5.0.0) Nend (v4.0.5) TapJoy (v11.12.2) UnityAds (v2.2.1) Vungle (v6.2.5) Zucks (v4.6.1) 動画リワードと全画面インタースティシャル広告の安定性向上 v2.11.4 (2018/03/28) Bundle SDKのバージョン更新 MoPub (v4.20.0) スワイプインタースティシャル広告の安定性向上 下記ネットワークは Android 4.4以上に配信されるよう修正 AppLovin Vungle v2.11.3 (2018/02/08) スワイプインタースティシャル広告で、特定の条件でレイアウトが崩れる問題を修正 v2.11.2 (2018/02/06) Mobvista(8.7.1)との連携(動画リワード、全画面インタースティシャル) v2.11.1 (2018/01/25) 動画リワード広告の安定性向上 Bundle SDKのバージョン更新 Maio (v1.0.7) AppLovin (v7.7.0) TapJoy (v11.11.1) Vungle (v5.3.2) Nend (v4.0.2) UnityAds (v2.1.2) v2.11.0 (2018/01/18) スワイプインタースティシャル広告に対応 Zucks(4.6.0)との連携(スワイプインタースティシャル広告) v2.10.3 (2017/11/27) MoPub SDKの更新(v4.18.0) exoplayerのバージョンが2.4.4に変更されましたので、MoPubをご利用の場合は更新をお願いします。 v2.10.2 (2017/11/16) AdCorsa(v1.5.1)との連携(動画リワード、全画面インタースティシャル) AdColony SDKのバンドルを終了 通信を常時SSLで行いように修正 v2.10.1 (2017/10/18) AdMob ネイティブ広告 ネットワークメディエーションに対応 デフォルトでCustomTabsを利用しないように修正 v2.10.0 (2017/10/05) 動画リワード広告、全画面インタースティシャル広告の初期化クラスを変更 gradleから対応提携ネットワークを指定して導入可能になりました Bundle SDKのバージョン更新 Vungle(v5.1.0) CAReward(v1.5.2) v2.9.5r2 (2017/09/12) 軽微な不具合の修正 v2.9.5 (2017/8/23) メティエーションアダプタのAndroidManifest.xmlの修正 v2.9.4 (2017/8/3) MoPubとの連携(ネイティブ) メディエーションアダプタのファイル構成変更 軽微な不具合の修正 配布パッケージAdstirAdsSdkAndroid-2.9.4-VideoAdSDKBundled-aarをご利用の皆様へ 当パッケージにおきまして、各アダプターのAndroidManifest.xmlに不備がございました。問題に対応しましたパッケージAdstirAdsSdkAndroid-2.9.5-VideoAdSDKBundled-aarが管理画面から取得可能となっておりますので、大変お手数をお掛けいたしますが、差し替えを実施していただきますか、こちらの動画視聴型広告使用時のAndroidManifest.xmlを参考に実装していただくよう、お願い申し上げます。 v2.9.3 (2017/7/19) 軽微な不具合の修正 v2.9.2 (2017/7/3) MoPub(v4.15.0) との連携(動画リワード、インタースティシャル、バナー) 軽微な不具合の修正 Bundle SDKバージョンの更新 TapJoy(v11.11.0) v2.9.1 (2017/6/21) 軽微な不具合の修正 v2.9.0（2017/6/12） 通信量削減機能対応 軽微な不具合の修正 Bundle SDKバージョンの更新 AppLovin(v7.2.0) TapJoy(v11.10.2) UnityAds(v2.1.0) imobile(v2.0.18) CAReward(v1.4.6) Vungle(v4.1.0) v2.8.3（2017/5/9） mopubカスタムイベントへの対応 v2.8.2（2017/4/25） Appnext（v2.0.1.455）との連携 v2.8.1（2017/3/27） CARewardに対応(v1.4.2) Bundle SDKバージョンの更新 AdColony(v3.1.0) maio(v1.0.4) AppLovin(v6.4.2) TapJoy(v11.10.0) UnityAds(v2.0.8) AmazonAds(v5.8.1.1) imobile(v2.0.17)　 Maioの全画面インタースティシャル対応 AdColonyのバージョンアップによる依存ライブラリの変更 動画リワードと全画面インタースティシャルが競合する問題の修正 動画リワードと全画面インタースティシャルのコールバックにおける問題の修正 CustomTabsのAPI変更による修正 重要なバグフィックス v2.8.0（2016/12/15） Tapjoyに対応(v11.8.2) CustomTabsに対応 ログ出力を整理 "}}